import { useState } from "react";
import { FaMoneyBillWave, FaMobileAlt } from "react-icons/fa";
import axios from "axios";

const PaymentMethods = ({
  totalAmount,
  selectedItems,
  userInfo,
  onSelectPayment ,
}) => {
  const [selectedMethod, setSelectedMethod] = useState("cash");
  const [loading, setLoading] = useState(false);
  const URL_API = process.env.REACT_APP_API_URL; // S·ª≠a l·ªói

  const paymentOptions = [
    { id: "cash", label: "Ti·ªÅn m·∫∑t", icon: <FaMoneyBillWave size={20} /> },
    { id: "momo", label: "MoMo", icon: <FaMobileAlt size={20} /> },
  ];

  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));



  const handleSelect = (method) => {
    setSelectedMethod(method);
  };

  const handlePurchase = async () => {
    if (!selectedMethod) {
      alert("Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n!");
      return;
    }
  
    if (!userInfo || totalAmount === 0 || !Array.isArray(selectedItems) || selectedItems.length === 0) {
      alert("Th√¥ng tin ƒë∆°n h√†ng kh√¥ng h·ª£p l·ªá!");
      console.log(userInfo, totalAmount, selectedItems);
      return;
    }
  
    setLoading(true);
    try {
      // B∆∞·ªõc 1: G·ª≠i y√™u c·∫ßu t·∫°o ƒë∆°n h√†ng
      const orderResponse = await axios.post(
        `${URL_API}orderClient/create`,
        {
          user_id: userInfo._id,
          totalPrice: totalAmount,
          status: "Ch·ªù x√°c nh·∫≠n",
          deliveryPhoneNumber: userInfo.phone,
          deliveryAdress: `${userInfo.address.street}, ${userInfo.address.city}, ${userInfo.address.country}`,
          items: selectedItems,
        },
        { withCredentials: true }
      );
  
      if (orderResponse.data.order) {
        const orderId = orderResponse.data.order._id;
        console.log("üéâ ƒê∆°n h√†ng ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!", orderResponse.data.order);
  
        onSelectPayment(selectedMethod, totalAmount);
  
        // B∆∞·ªõc 2: N·∫øu ch·ªçn MoMo th√¨ ti·∫øp t·ª•c g·ª≠i request thanh to√°n
        if (selectedMethod === "momo") {
          console.log("G·ª≠i request MoMo v·ªõi orderId:", orderId);
          if (!orderId) {
            throw new Error("orderId ch∆∞a ƒë∆∞·ª£c t·∫°o, vui l√≤ng th·ª≠ l·∫°i!");
          }
  
          const momoResponse = await axios.post(
            `${URL_API}payment/momopayment`,
            {
              amount: totalAmount,
              orderId: orderId,
            },
            { withCredentials: true }
          );
  
          console.log("Ph·∫£n h·ªìi t·ª´ MoMo:", momoResponse.data);
  
          if (momoResponse.data && momoResponse.data.resultCode === 0) {
            console.log("Chuy·ªÉn h∆∞·ªõng t·ªõi MoMo:", momoResponse.data.payUrl);
            window.location.href = momoResponse.data.payUrl; // Chuy·ªÉn h∆∞·ªõng t·ªõi trang thanh to√°n MoMo
          } else {
            alert("Kh√¥ng th·ªÉ t·∫°o thanh to√°n MoMo, vui l√≤ng th·ª≠ l·∫°i!");
          }
        } else {
          alert("‚úÖ ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng! Vui l√≤ng thanh to√°n khi nh·∫≠n h√†ng.");
        }
      } else {
        alert("Kh√¥ng th·ªÉ t·∫°o ƒë∆°n h√†ng!");
      }
    } catch (error) {
      console.error("L·ªói khi t·∫°o ƒë∆°n h√†ng:", error);
      alert("L·ªói khi t·∫°o ƒë∆°n h√†ng!");
    } finally {
      setLoading(false);
    }
  };
  ;

  return (
    <div className="p-4 border rounded-lg bg-white">
      <h2 className="text-lg font-semibold mb-3">
        Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
      </h2>
      <div className="flex flex-col gap-3">
        {paymentOptions.map((option) => (
          <label
            key={option.id}
            className={`flex items-center gap-3 p-3 border rounded-lg cursor-pointer ${
              selectedMethod === option.id
                ? "border-blue-500 bg-blue-100"
                : "border-gray-300"
            }`}
          >
            <input
              type="radio"
              name="paymentMethod"
              value={option.id}
              checked={selectedMethod === option.id}
              onChange={() => handleSelect(option.id)}
              className="w-5 h-5 text-blue-600 focus:ring-blue-500 cursor-pointer"
            />
            {option.icon}
            <span className="text-md">{option.label}</span>
          </label>
        ))}
      </div>

      <button
        className="mt-4 px-4 py-2 bg-green-500 text-white rounded w-full hover:bg-green-600 transition disabled:bg-gray-400"
        onClick={handlePurchase}
        disabled={loading}
      >
        {loading ? "ƒêang x·ª≠ l√Ω..." : "Thanh To√°n"}
      </button>
    </div>
  );
};

export default PaymentMethods;
